AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31

Description: Amazon Transcribe Live Call Analytics with Agent Assist - Chime Call Analytics w/ Chime Voice Connector

Parameters:
  LCAStackName:
    Type: String
    Description: Name of the LCA stack to prepend to resources.

  EnableVoiceToneAnalysis:
    Type: String
    Default: true
    AllowedValues:
      - true
      - false
    Description: >
      Set to true to enable Chime voice tone analysis. This is only used if Chime
      Call Analytics is enabled.

  # EnableSpeakerSearch:
  #   Type: String
  #   Default: true
  #   AllowedValues:
  #     - true
  #     - false
  #   Description: >
  #     Set to true to enable Chime speaker search. This is only used if Chime
  #     Call Analytics is enabled.

  AudioFilePrefix:
    Type: String
    Default: lca-audio-recordings/
    Description: >-
      The Amazon S3 prefix where the merged output audio files will be saved (must end in "/")

  CallAnalyticsPrefix:
    Type: String
    Default: lca-call-analytics/
    Description: The Amazon S3 prefix where the post-call analytics files will be saved, when using analytics api mode (must end in "/")

  KinesisDataStreamName:
    Type: String
    Description: >-
      Name of Kinesis Data Stream to publish events to

  KinesisDataStreamArn:
    Type: String
    Description: >-
      Arn of Kinesis Data Stream to publish events to

  S3BucketName:
    Type: String
    Description: >-
      S3 Bucket name for recordings

  TranscribeApiMode:
    Type: String
    Default: analytics
    AllowedValues:
        - standard
        - analytics
    Description: Set the default operational mode for Transcribe
    
  IsPartialTranscriptEnabled:
    Type: String
    Default: 'true'
    Description: >-
      Enable partial transcripts to receive low latency evolving transcriptions for each conversation turn. Set to false to process only the
      final version of each conversation turn.
    AllowedValues:
      - 'true'
      - 'false'

  IsContentRedactionEnabled:
    Type: String
    Default: "false"
    Description: >-
      Enable content redaction from Amazon Transcribe transcription output. This is only used when
      the 'en-US' language is selected in the TranscribeLanguageCode parameter.
    AllowedValues:
      - "true"
      - "false"

  TranscribeContentRedactionType:
    Type: String
    Default: PII
    Description: >-
      Type of content redaction from Amazon Transcribe transcription output
    AllowedValues:
      - PII

  TranscribeLanguageCode:
    Type: String
    Description: >-
      Language code to be used for Amazon Transcribe
    Default: en-US
    AllowedValues:
      - en-US
      - es-US
      - en-GB
      - fr-CA
      - fr-FR
      - en-AU
      - it-IT
      - de-DE
      - pt-BR
      - ja-JP
      - ko-KR
      - zh-CN

  TranscribePiiEntityTypes:
    Type: String
    # yamllint disable rule:line-length
    Default: BANK_ACCOUNT_NUMBER,BANK_ROUTING,CREDIT_DEBIT_NUMBER,CREDIT_DEBIT_CVV,CREDIT_DEBIT_EXPIRY,PIN,EMAIL,ADDRESS,NAME,PHONE,SSN
    # yamllint enable rule:line-length
    Description: >-
      Select the PII entity types you want to identify or redact. Remove the values that you don't
      want to redact from the default.  DO NOT ADD CUSTOM VALUES HERE.

  CustomVocabularyName:
    Type: String
    Default: ''
    Description: >-
      The name of the vocabulary to use when processing the transcription job. Leave blank if no
      custom vocabulary to be used. If yes, the custom vocabulary must pre-exist in your account.

  CustomLanguageModelName:
    Type: String
    Default: ''
    Description: >-
      The name of the custom language model to use when processing the transcription job. Leave blank if no
      custom language model is to be used. If specified, the custom language model must pre-exist in your account, 
      match the Language Code selected above, and use the 'Narrow Band' base model.

  SiprecLambdaHookFunctionArn:
    Default: ''
    Type: String
    AllowedPattern: '^(|arn:aws:lambda:.*)$'
    Description: >
      (Optional) Used only when CallAudioSource is set to 'Chime Voice Connector (SIPREC)'.
      If present, the specified Lambda function is invoked at the start of each call. 
      The call start event from Chime Voice Connector (containing Siprec headers) is provided as input.
      The function must return a True/False flag to indicate if the call should be processed or ignored, 
      a mapped CallId, an AgentId, and may be extended to support additional features in future.

  VoiceConnectorId:
    Type: String
    Default: ''
    Description: >-
      Voice connector Id for setting up EventBridge Rule to restrict events to specific Chime Voice Connector.

Resources:

  ##########################################################################
  # NodeJS Transcriber Lambda Layer
  ##########################################################################
  TranscriberLambdaLayer:
    Type: AWS::Serverless::LayerVersion
    Properties:
      CompatibleRuntimes:
        - nodejs14.x
        - nodejs16.x
        - nodejs18.x
      Description: >
       This is a layer with shared nodejs libraries for the LCA call transcriber 
       and call analytics initialization Lambdas.
      ContentUri:
        ../lambda_layers/node_transcriber_layer/transcriber-layer.zip
  
  ##########################################################################
  # Boto3 Transcriber Lambda Layer
  ##########################################################################
  Boto3LambdaLayer:
    Type: AWS::Serverless::LayerVersion
    Properties:
      CompatibleRuntimes:
        - python3.7
        - python3.8
      Description: >
       This is a layer with shared python libraries for the custom resource 
       to create the ChimeSDKMediaInsightsPipelineConfiguration.
      ContentUri:
        ../lambda_layers/boto3_layer/boto3_lambda_layer.zip

  ##########################################################################
  # Media Pipeline configuration 
  ##########################################################################

  DeployMediaPipelineConfig:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: ./chime-mediapipeline-config.yaml
      Parameters:
        StackName: !Ref LCAStackName
        EnableVoiceToneAnalysis: !Ref EnableVoiceToneAnalysis
        # EnableSpeakerSearch: !Ref EnableSpeakerSearch
        TranscribeApiMode: !Ref TranscribeApiMode
        KinesisDataStreamArn: !Ref KinesisDataStreamArn
        S3BucketName: !Ref S3BucketName
        RawFilePrefix: 'lca-audio-raw/'
        AudioFilePrefix: !Ref AudioFilePrefix
        CallAnalyticsPrefix: !Ref CallAnalyticsPrefix
        TcaDataAccessRoleArn: !GetAtt TcaDataAccessRole.Arn
        IsPartialTranscriptEnabled: !Ref IsPartialTranscriptEnabled
        IsContentRedactionEnabled: !If
          - ShouldEnableContentRedaction
          - 'true'
          - 'false'
        TranscribeLanguageCode: !Ref TranscribeLanguageCode
        TranscribeContentRedactionType: !Ref TranscribeContentRedactionType
        TranscribePiiEntityTypes: !Ref TranscribePiiEntityTypes
        CustomVocabularyName: !Ref CustomVocabularyName
        CustomLanguageModelName: !Ref CustomLanguageModelName
        ChimeCallAnalyticsResourceAccessRoleArn: !GetAtt ChimeCallAnalyticsResourceAccessRole.Arn
        LambdaSinkArn: !GetAtt VoiceToneLambda.Arn
        Boto3LayerArn: !Ref Boto3LambdaLayer

  ChimeCallAnalyticsResourceAccessRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - mediapipelines.chime.amazonaws.com
            Action:
              - sts:AssumeRole
            Condition:
              StringEquals:
                aws:SourceAccount: !Sub ${AWS::AccountId}
              ArnLike:
                aws:SourceArn: !Sub arn:aws:chime:*:${AWS::AccountId}:*
      Path: /
      Policies:
        - PolicyName: chime-analytics-kds
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Action:
                  - kinesis:PutRecord
                Effect: Allow
                Resource:  
                  - !Ref KinesisDataStreamArn
              - Action:
                  - kms:GenerateDataKey
                Effect: Allow
                Resource:
                  - !Sub arn:${AWS::Partition}:kms:${AWS::Region}:${AWS::AccountId}:key/*
                Condition:
                  StringLike:
                    aws:ResourceTag/AWSServiceName: ChimeSDK
        - PolicyName: chime-analytics-kvs-transcribe
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Action:
                - transcribe:StartCallAnalyticsStreamTranscription
                - transcribe:StartTranscriptionJob
                Effect: Allow
                Resource: "*"
              - Action:
                - kinesisvideo:GetDataEndpoint
                - kinesisvideo:GetMedia
                Effect: Allow
                Resource: 
                  - !Sub arn:${AWS::Partition}:kinesisvideo:${AWS::Region}:${AWS::AccountId}:stream/Chime*"
              - Action:
                - kinesisvideo:GetDataEndpoint
                - kinesisvideo:GetMedia
                Effect: Allow
                Resource: 
                  - !Sub arn:${AWS::Partition}:kinesisvideo:${AWS::Region}:${AWS::AccountId}:stream/*"
                Condition:
                  StringLike:
                    aws:ResourceTag/AWSServiceName: ChimeSDK
              - Action:
                - kms:Decrypt
                Effect: Allow
                Resource:
                  - !Sub arn:${AWS::Partition}:kms:${AWS::Region}:${AWS::AccountId}:key/*
                Condition:
                  StringLike:
                    aws:ResourceTag/AWSServiceName: ChimeSDK
              - Action:
                - lambda:InvokeFunction
                - lambda:GetPolicy
                Effect: Allow
                Resource: 
                  - !GetAtt VoiceToneLambda.Arn

  ##########################################################################
  # Voice Tone Lambda Function
  ##########################################################################

  VoiceToneLambda:
    Type: AWS::Serverless::Function
    Properties:
      Architectures:
        - x86_64
      Description: >-
        AWS Lambda Function that will accept events from Chime Call Analytics voice
        tone analysis, modify them for use for LCA, and save them to the LCA Kinesis Data Streams
        as a voice tone analysis
      Runtime: python3.8
      Handler: lambda_function.lambda_handler
      Layers:
        - !Ref Boto3LambdaLayer
      Role: !GetAtt VoiceToneLambdaRole.Arn
      MemorySize: 128
      Timeout: 60
      Environment:
        Variables:
          KINESIS_STREAM_NAME: !Ref KinesisDataStreamName
          TRANSCRIBER_CALL_EVENT_TABLE_NAME: !Ref TranscriberCallEventTable
      CodeUri: ../lambda_functions/voice_tone_processor

  VoiceToneLambdaRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - sts:AssumeRole
      Path: /
      ManagedPolicyArns:
        # CloudWatch Insights Managed Policy
        - arn:aws:iam::aws:policy/CloudWatchLambdaInsightsExecutionRolePolicy
        - arn:aws:iam::aws:policy/AWSXrayWriteOnlyAccess
      Policies:
        - PolicyName: lca-voice-tone-policy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - chime:StartVoiceToneAnalysisTask
                  - chime:StopVoiceToneAnalysisTask
                  - chime:StartSpeakerSearchTask
                  - chime:StopSpeakerSearchTask
                Resource: "*"
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource:
                  - !Sub "arn:${AWS::Partition}:logs:${AWS::Region}:\
                    ${AWS::AccountId}:log-group:/aws/lambda/*"
              - Effect: Allow
                Action:
                  - dynamodb:Query
                  - dynamodb:Scan
                  - dynamodb:GetItem
                  - dynamodb:PutItem
                  - dynamodb:UpdateItem
                Resource:
                  - !GetAtt TranscriberCallEventTable.Arn
              - Action:
                  - kinesis:PutRecord
                Effect: Allow
                Resource:  
                  - !Ref KinesisDataStreamArn

  ##########################################################################
  # Chime Call Initialization
  ##########################################################################

  TranscriberCallEventTable:
    Type: AWS::DynamoDB::Table
    DeletionPolicy: Delete
    UpdateReplacePolicy: Delete
    Properties:
      AttributeDefinitions:
        # primary key attributes
        - AttributeName: PK
          AttributeType: S
        - AttributeName: SK
          AttributeType: S
      KeySchema:
        - AttributeName: PK
          KeyType: HASH
        - AttributeName: SK
          KeyType: RANGE
      BillingMode: PAY_PER_REQUEST
      PointInTimeRecoverySpecification:
        PointInTimeRecoveryEnabled: true
      SSESpecification:
        SSEEnabled: true
      TimeToLiveSpecification:
        AttributeName: ExpiresAfter
        Enabled: true
      StreamSpecification:
        StreamViewType: NEW_IMAGE

  CallAnalyticsInitFunction:
    Type: AWS::Serverless::Function
    Properties:
      Architectures:
        - arm64
      Description: >-
        AWS Lambda Function that will be triggered when a new call starts. This will
        initialize the Chime Call Analytics Media Pipeline.
      Handler: index.handler
      Layers:
        # periodically update the Lambda Insights Layer
        # https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/Lambda-Insights-extension-versions.html
        - !Sub "arn:aws:lambda:${AWS::Region}:580247275435:layer:LambdaInsightsExtension-Arm64:2"
        - !Ref TranscriberLambdaLayer
      Role: !GetAtt CallAnalyticsInitFunctionRole.Arn
      Runtime: nodejs18.x
      MemorySize: 768
      Timeout: 900
      Tracing: Active
      Environment:
        Variables:
          LCA_STACK_NAME: !Ref LCAStackName
          TRANSCRIBE_API_MODE: !Ref TranscribeApiMode
          BUFFER_SIZE: "128"
          LAMBDA_INVOKE_TIMEOUT: "720000"
          KINESIS_STREAM_NAME: !Ref KinesisDataStreamName
          TRANSCRIBER_CALL_EVENT_TABLE_NAME: !Ref TranscriberCallEventTable
          REGION: !Ref AWS::Region
          OUTPUT_BUCKET: !Ref S3BucketName
          RAW_FILE_PREFIX: 'lca-audio-raw/'
          RECORDING_FILE_PREFIX: !Ref AudioFilePrefix
          CALL_ANALYTICS_FILE_PREFIX: !Ref CallAnalyticsPrefix
          TCA_DATA_ACCESS_ROLE_ARN: !GetAtt TcaDataAccessRole.Arn
          POST_CALL_CONTENT_REDACTION_OUTPUT: 'redacted'
          TEMP_FILE_PATH: '/tmp/'
          SAVE_PARTIAL_TRANSCRIPTS: !Ref IsPartialTranscriptEnabled
          IS_CONTENT_REDACTION_ENABLED: !If
            - ShouldEnableContentRedaction
            - 'true'
            - 'false'
          TRANSCRIBE_LANGUAGE_CODE: !Ref TranscribeLanguageCode
          CONTENT_REDACTION_TYPE: !Ref TranscribeContentRedactionType
          PII_ENTITY_TYPES: !Ref TranscribePiiEntityTypes
          CUSTOM_VOCABULARY_NAME: !Ref CustomVocabularyName
          CUSTOM_LANGUAGE_MODEL_NAME: !Ref CustomLanguageModelName
          LAMBDA_HOOK_FUNCTION_ARN: !Ref SiprecLambdaHookFunctionArn
      CodeUri: ../lambda_functions/chime_call_analytics_initialization
    Metadata:
      cfn_nag:
        rules_to_suppress:
          - id: W89
            reason: Customer can use VPC if desired

  CallAnalyticsInitFunctionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - sts:AssumeRole
      Path: /
      ManagedPolicyArns:
        # CloudWatch Insights Managed Policy
        - arn:aws:iam::aws:policy/CloudWatchLambdaInsightsExecutionRolePolicy
        - arn:aws:iam::aws:policy/AWSXrayWriteOnlyAccess
      Policies:
        - PolicyName: lambda-policy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - iam:PassRole
                Resource:
                  - !GetAtt TcaDataAccessRole.Arn
              - Effect: Allow
                Action:
                  - transcribe:DeleteTranscriptionJob
                  - transcribe:GetTranscriptionJob
                  - transcribe:GetVocabulary
                  - transcribe:ListTranscriptionJobs
                  - transcribe:ListVocabularies
                  - transcribe:StartStreamTranscription
                  - transcribe:StartCallAnalyticsStreamTranscription
                  - transcribe:StartTranscriptionJob
                Resource: "*"
              - Action:
                  - "kinesisvideo:Describe*"
                  - "kinesisvideo:Get*"
                  - "kinesisvideo:List*"
                Effect: "Allow"
                Resource: "*"
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource:
                  - !Sub "arn:${AWS::Partition}:logs:${AWS::Region}:\
                    ${AWS::AccountId}:log-group:/aws/lambda/*"
              - Effect: Allow
                Action:
                  - dynamodb:Query
                  - dynamodb:Scan
                  - dynamodb:GetItem
                  - dynamodb:PutItem
                  - dynamodb:UpdateItem
                Resource:
                  - !GetAtt TranscriberCallEventTable.Arn
              - Action:
                  - kinesis:PutRecord
                Effect: Allow
                Resource:  
                  - !Ref KinesisDataStreamArn
              - Effect: Allow
                Action:
                  - s3:GetObject
                  - s3:ListBucket
                  - s3:PutObject
                  - s3:DeleteObject
                Resource:
                  - !Sub
                    - "arn:aws:s3:::${bucket}"
                    - bucket: !Ref S3BucketName
                  - !Sub
                    - "arn:aws:s3:::${bucket}/*"
                    - bucket: !Ref S3BucketName
              - !If
                - ShouldEnableLambdaHook
                - Effect: Allow
                  Action:
                    - lambda:InvokeFunction
                  Resource: !Sub "${SiprecLambdaHookFunctionArn}"
                - Ref: AWS::NoValue

  TcaDataAccessRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - transcribe.streaming.amazonaws.com
            Action:
              - sts:AssumeRole
      Path: /
      Policies:
        - PolicyName: tca-post-call-policy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - s3:GetObject
                  - s3:ListBucket
                  - s3:PutObject
                  - s3:DeleteObject
                Resource:
                  - !Sub
                    - "arn:aws:s3:::${bucket}"
                    - bucket: !Ref S3BucketName
                  - !Sub
                    - "arn:aws:s3:::${bucket}/*"
                    - bucket: !Ref S3BucketName          

    Metadata:
      cfn_nag:
        rules_to_suppress:
          - id: W11
            reason: >-
              Transcribe does not support resource-level permissions and KVS streams are dynamic

  AllowEventBridgeToCallAnalyticsInitFunctionLambdaFromChimeVC:
    Type: "AWS::Lambda::Permission"
    Properties:
      FunctionName: !Ref CallAnalyticsInitFunction
      Action: "lambda:InvokeFunction"
      Principal: events.amazonaws.com
      SourceArn: !GetAtt EventBridgeRuleToTriggerCallAnalyticsInitLambdaFromChimeVC.Arn
      SourceAccount: !Ref AWS::AccountId

  EventBridgeRuleToTriggerCallAnalyticsInitLambdaFromChimeVC:
    Type: AWS::Events::Rule
    Properties:
      Description: "This rule is triggered when the ChimeVC streaming status changes"
      EventPattern:
        detail:
          voiceConnectorId:
            - !Ref VoiceConnectorId
        detail-type:
          - "Chime VoiceConnector Streaming Status"
        source:
          - aws.chime
      Targets:
        - Id: CallAnalyticsInitTarget
          Arn: !GetAtt CallAnalyticsInitFunction.Arn
      State: "ENABLED"

  AllowEventBridgeToCallAnalyticsInitFunctionLambdFromIVR:
    Type: "AWS::Lambda::Permission"
    Properties:
      FunctionName: !Ref CallAnalyticsInitFunction
      Action: "lambda:InvokeFunction"
      Principal: events.amazonaws.com
      SourceArn: !GetAtt EventBridgeRuleToTriggerCallAnalyticsInitLambdaFromIVR.Arn
      SourceAccount: !Ref AWS::AccountId

  EventBridgeRuleToTriggerCallAnalyticsInitLambdaFromIVR:
    Type: AWS::Events::Rule
    Properties:
      Description: "This rule is triggered  when a START_CALL_PROCESSING event is sent from IVR"
      EventPattern:
        detail-type:
          - "START_CALL_PROCESSING"
        source:
          - lca-solution
      Targets:
        - Id: CallAnalyticsInitTarget
          Arn: !GetAtt CallAnalyticsInitFunction.Arn
      State: "ENABLED"

  # Permission for Call Transcriber to invoke itself
  CallAnalyticsInitPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !Ref CallAnalyticsInitFunction
      Principal: !GetAtt CallAnalyticsInitFunctionRole.Arn

Metadata:
  "AWS::CloudFormation::Interface":
    ParameterGroups:
      - Label:
          default: Amazon S3 Configuration
        Parameters:
          - S3BucketName
          - AudioFilePrefix
          - MonoAudioFilePrefix
    ParameterLabels:
      S3BucketName:
        default: Call Audio Bucket Name
      AudioFilePrefix:
        default: Audio File Prefix
      IsContentRedactionEnabled:
        default: Enable Content Redaction
      TranscribeContentRedactionType:
        default: Type of Content Redaction
      TranscribeLanguageCode:
        default: Transcription Language Code
      TranscribePiiEntityTypes:
        default: Transcription PII Redaction Entity Types
      CustomVocabularyName:
        default: Transcription Custom Vocabulary Name
      
Conditions:
  ShouldEnableContentRedaction: !And
  - !Equals [!Ref IsContentRedactionEnabled, 'true']
  - !Equals [!Ref TranscribeLanguageCode, 'en-US']
  ShouldEnableLambdaHook: !Not [!Equals [!Ref SiprecLambdaHookFunctionArn, '']]

Outputs:

  CallTranscriberEventTableName:
    Value: !Ref TranscriberCallEventTable

  CallTranscriberEventTableArn:
    Value: !GetAtt TranscriberCallEventTable.Arn

  IsContentRedactionEnabled: 
    Value: !If
      - ShouldEnableContentRedaction
      - 'true'
      - 'false'